; This program do the fibonacci sequence
NUM00:		VAR 0       ; Declare 32-bit variable to fill space
START: 		LDN NUM01   ; Load negated variable value to accumulator
		SUB NUM02   ; Subtract from accumulator
		STO SUM01   ; Store accumulator to sum variable. Then we negate the stored answer
		LDN SUM01   ; Copy negated value to accumulator
        	STO SUM01   ; Store accumulator to variable
		LDN NUM02   ; Load NUM02's negated in to the accumulator
		STO NUM01   ; Copy NUM02's value in NUM01
		LDN NUM01   ; Negate NUM01
		STO NUM01   ; Store the positive value of NUM02
		LDN SUM01   ; Copy MYSUM's negated value in the accumulator
		STO NUM02   ; Store MYSUM's value into NUM02
		LDN NUM02   ; negate NUM02
		STO NUM02   ; Store the positive value of NUM02
END:		JMP NUM00   ; Jumps back to the first line where NUM00 was declared
NUM01:		VAR 1 	    ; Declares a 32 bit variable
NUM02: 		VAR 1  	    ; Declares a 32 bit variable
SUM01:  	VAR 0       ; Sum variable declaration
